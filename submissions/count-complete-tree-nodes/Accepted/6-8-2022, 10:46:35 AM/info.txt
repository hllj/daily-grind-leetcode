{"id":717009881,"lang":"python3","time":"4Â weeks","timestamp":1654659995,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/717009881/","is_pending":"Not Pending","title":"Count Complete Tree Nodes","memory":"21.4 MB","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def countNodes(self, root: Optional[TreeNode]) -> int:\n        if root == None:\n            return 0\n        left_depth = self.get_depth(root.left)\n        right_depth = self.get_depth(root.right)\n        if left_depth == right_depth:\n            return pow(2, left_depth) + self.countNodes(root.right)\n        else:\n            return pow(2, right_depth) + self.countNodes(root.left)\n\n    def get_depth(self, root):\n        if root == None:\n            return 0\n        return 1 + self.get_depth(root.left)","compare_result":"111111111111111111","title_slug":"count-complete-tree-nodes"}