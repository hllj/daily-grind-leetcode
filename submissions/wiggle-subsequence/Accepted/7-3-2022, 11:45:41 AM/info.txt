{"id":737141149,"lang":"python3","time":"4 days, 11 hours","timestamp":1656823541,"status_display":"Accepted","runtime":"471 ms","url":"/submissions/detail/737141149/","is_pending":"Not Pending","title":"Wiggle Subsequence","memory":"14.1 MB","code":"class Solution:\n    def wiggleMaxLength(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n == 1:\n            return 1\n        f = [[0, 0] for _ in range(n)]\n        f[0][0] = 1\n        f[0][1] = 1\n        f[1][0] = 2 if nums[1] > nums[0] else 1\n        f[1][1] = 2 if nums[1] < nums[0] else 1\n        for i in range(2, n):\n            f[i][0] = f[i - 1][0]\n            f[i][1] = f[i - 1][1]\n            for j in range(i):\n                if nums[i] > nums[j]:\n                    f[i][0] = max(f[i][0], f[j][1] + 1)\n                if nums[j] > nums[i]:\n                    f[i][1] = max(f[i][1], f[j][0] + 1)\n        res = 1\n        for i in range(n):\n            res = max(res, f[i][0], f[i][1])\n        return res\n        ","compare_result":"11111111111111111111111111","title_slug":"wiggle-subsequence"}