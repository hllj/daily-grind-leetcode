{"id":725085924,"lang":"python3","time":"2 weeks, 3 days","timestamp":1655551274,"status_display":"Accepted","runtime":"2201 ms","url":"/submissions/detail/725085924/","is_pending":"Not Pending","title":"Prefix and Suffix Search","memory":"67 MB","code":"from itertools import zip_longest\n\nclass WordFilter:\n\n    def __init__(self, words: List[str]):\n        self.child = {}\n        for idx, word in enumerate(words):\n            current = self.child\n            current['#'] = idx\n            for i, x in enumerate(word):\n                tmp = current\n                for c in word[i:]:\n                    if (c, None) not in tmp:\n                        tmp[(c, None)] = {}\n                    tmp = tmp[(c, None)]\n                    tmp['#'] = idx\n                tmp = current\n                for c in word[:-i or None][::-1]:\n                    if (None, c) not in tmp:\n                        tmp[(None, c)] = {}\n                    tmp = tmp[(None, c)]\n                    tmp['#'] = idx\n                if (x, word[~i]) not in current:\n                    current[(x, word[~i])] = {}\n                current = current[(x, word[~i])]\n                current['#'] = idx\n        # print(self.child)\n\n    def f(self, prefix: str, suffix: str) -> int:\n        current = self.child\n        for a, b in zip_longest(prefix, suffix[::-1]):\n            if (a, b) not in current:\n                return -1\n            current = current[(a, b)]\n        # print(current)\n        return current['#']\n\n\n# Your WordFilter object will be instantiated and called as such:\n# obj = WordFilter(words)\n# param_1 = obj.f(prefix,suffix)","compare_result":"1111111111111","title_slug":"prefix-and-suffix-search"}