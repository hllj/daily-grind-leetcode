{"id":717213759,"lang":"python3","time":"4Â weeks","timestamp":1654681289,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/717213759/","is_pending":"Not Pending","title":"Minimum Falling Path Sum","memory":"14.8 MB","code":"class Solution:\n    def minFallingPathSum(self, matrix: List[List[int]]) -> int:\n        n = len(matrix)\n        m = len(matrix[0])\n        f = [0] * m\n        f1 = [0] * m\n        for j in range(m):\n            f[j] = matrix[0][j]\n        print(f)\n        for i in range(1, n):\n            for j in range(m):\n                f1[j] = matrix[i][j] + min(f[j], f[max(0, j - 1)], f[min(m - 1, j + 1)])\n            f,f1 = f1,f\n            print(f)\n        return min(f)","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-falling-path-sum"}