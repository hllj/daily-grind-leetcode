{"id":715543201,"lang":"python3","time":"4Â weeks, 1Â day","timestamp":1654499827,"status_display":"Accepted","runtime":"595 ms","url":"/submissions/detail/715543201/","is_pending":"Not Pending","title":"Find Right Interval","memory":"20.2 MB","code":"import functools\nclass Solution:\n    \n    def findRightInterval(self, intervals: List[List[int]]) -> List[int]:\n        def compare(r1, r2):\n            if r1['interval'][0] != r2['interval'][0]:\n                if r1['interval'][0] < r2['interval'][0]:\n                    return -1\n                elif r1['interval'][0] > r2['interval'][0]:\n                    return 1\n                else:\n                    return 0\n                \n            else:\n                if r2['interval'][1] < r2['interval'][1]:\n                    return -1\n                elif r2['interval'][1] > r2['interval'][1]:\n                    return 1\n                else:\n                    return 0\n        n = len(intervals)\n        rs = []\n        for idx, interval in enumerate(intervals):\n            rs.append({'idx': idx, 'interval': interval})\n        rs.sort(key=functools.cmp_to_key(compare))\n        res = [-1] * n\n        for i in range(n):\n            interval = rs[i]['interval']\n            l = i\n            r = n - 1\n            idx = -1\n            while l <= r:\n                m = (l + r) // 2\n                if rs[m]['interval'][0] >= interval[1]:\n                    idx = rs[m]['idx']\n                    r = m - 1\n                else:\n                    l = m + 1\n            res[rs[i]['idx']] = idx\n        return res","compare_result":"1111111111111111111","title_slug":"find-right-interval"}