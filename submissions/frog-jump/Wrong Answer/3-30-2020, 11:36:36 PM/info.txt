{"id":317523764,"lang":"cpp","time":"2 years, 3 months","timestamp":1585586196,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/317523764/","is_pending":"Not Pending","title":"Frog Jump","memory":"N/A","code":"class Solution {\npublic:\n    bool canCross(vector<int>& stones) {\n        int n = stones.size();\n        int f[n];\n        for (int i = 0; i < n; i++)\n            f[i] = -1;\n        f[0] = 0;\n        bool res = true;\n        for (int i = 0; i < n; i++)\n            if (f[i] == -1) {\n                res = false;\n                break;\n            } else {\n                int k = f[i];\n                for (int j = k - 1; j <= k + 1; j++) {\n                    int next = stones[i] + j;\n                    int left = 0;\n                    int right = n- 1;\n                    while (left <= right) {\n                        int mid = (left + right) >> 1;\n                        if (stones[mid] == next) {\n                            f[mid] = j;\n                        }\n                        if (stones[mid] > next) right = mid - 1;\n                        else left = mid + 1;\n                    }\n                }\n            }\n        return (f[n - 1] > 0);\n    }\n};","compare_result":"101111111101111010100000000001111111111","title_slug":"frog-jump"}