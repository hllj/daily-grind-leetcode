{"id":317528886,"lang":"cpp","time":"2 years, 3 months","timestamp":1585587490,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/317528886/","is_pending":"Not Pending","title":"Frog Jump","memory":"N/A","code":"class Solution {\npublic:\n    bool canCross(vector<int>& stones) {\n        typedef pair <int, int> ii;\n        int n = stones.size();\n        queue <ii> q;\n        q.push(ii(0, 0));\n        while (!q.empty()) {\n            ii u = q.front();\n            q.pop();\n            int pos = u.first;\n            int k = u.second;\n            if (binary_search(stones.begin(), stones.end(), pos)) {\n                return true;\n            }\n            if (binary_search(stones.begin(), stones.end(), pos + k - 1)) {\n               q.push(ii(pos + k - 1, k - 1)); \n            }\n            if (binary_search(stones.begin(), stones.end(), pos + k)) {\n               q.push(ii(pos + k, k)); \n            }\n            if (binary_search(stones.begin(), stones.end(), pos + k + 1)) {\n               q.push(ii(pos + k + 1, k + 1)); \n            }\n        }\n        return false;\n    }\n};","compare_result":"110000111110001101111111111110000000000","title_slug":"frog-jump"}