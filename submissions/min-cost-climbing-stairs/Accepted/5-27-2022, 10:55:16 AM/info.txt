{"id":708064843,"lang":"python3","time":"1 month, 1 week","timestamp":1653623716,"status_display":"Accepted","runtime":"85 ms","url":"/submissions/detail/708064843/","is_pending":"Not Pending","title":"Min Cost Climbing Stairs","memory":"13.9 MB","code":"class Solution:\n    def minCostClimbingStairs(self, cost: List[int]) -> int:\n        n = len(cost)\n        inf = 1000 * (999 + 1)\n        f = [inf] * (n + 3)\n        f[0] = 0\n        f[1] = 0\n        for  i in range(2, n + 1):\n            f[i] = min(f[i - 2] + cost[i - 2], f[i - 1] + cost[i - 1])\n        return f[n]","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"min-cost-climbing-stairs"}