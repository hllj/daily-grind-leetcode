{"id":715370497,"lang":"python3","time":"1Â month","timestamp":1654481287,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/715370497/","is_pending":"Not Pending","title":"Intersection of Two Linked Lists","memory":"N/A","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.next = None\n\nclass Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> Optional[ListNode]:\n        pA = headA\n        while pA.next != None:\n            pB = headB\n            while pB.next != None:\n                if pB.next == pA.next:\n                    return pB.next\n                else:\n                    pB = pB.next\n            pA = pA.next\n        return None","compare_result":"111111111111000000000000001111111100000","title_slug":"intersection-of-two-linked-lists"}