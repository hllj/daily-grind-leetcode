{"id":736399941,"lang":"python3","time":"4Â days, 9Â hours","timestamp":1656744781,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/736399941/","is_pending":"Not Pending","title":"Path Sum II","memory":"N/A","code":"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def traverse(self, u, li, s):\n        if u.left == None and u.right == None:\n            if s + u.val == self.targetSum:\n                # print(u, li, s)\n                self.sol.append(li + [u.val])\n            return\n        if s + u.val > self.targetSum:\n            return\n        if u.left != None:\n            self.traverse(u.left, li + [u.val], s + u.val)\n        if u.right != None:\n            self.traverse(u.right, li + [u.val], s + u.val)\n    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:\n        self.sol = []\n        self.targetSum = targetSum\n        self.traverse(root, [], 0)\n        return self.sol","compare_result":"1110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"path-sum-ii"}