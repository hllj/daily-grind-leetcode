{"id":730528294,"lang":"python3","time":"1 week, 5 days","timestamp":1656125443,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/730528294/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution:\n    def check(self, x1, x2):\n        cnt = 0\n        for i in range(len(x1)):\n            if x1[i] != x2[i]:\n                cnt += 1\n        if cnt == 1:\n            return True\n        return False\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        next_word = {}\n        wordList.append(beginWord)\n        n = len(wordList)\n        for i in range(n):\n            next_word[wordList[i]] = []\n            for j in range(n):\n                if i != j and self.check(wordList[i], wordList[j]):\n                    next_word[wordList[i]].append(wordList[j])\n        # print(next_word)\n        q = []\n        q.append((beginWord, 1))\n        visited = set()\n        visited.add(beginWord)\n        while len(q) > 0:\n            word, cnt = q.pop(0)\n            # print(word, cnt)\n            for nxt in next_word[word]:\n                if nxt not in visited:\n                    q.append((nxt, cnt + 1))\n                    visited.add(nxt)\n                    # print('next', nxt, cnt + 1)\n                    if nxt == endWord:\n                        return cnt + 1\n        return 0","compare_result":"11111111111111111111111111111111110000000000000000","title_slug":"word-ladder"}