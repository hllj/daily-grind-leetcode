{"id":730531163,"lang":"python3","time":"1 week, 5 days","timestamp":1656125871,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/730531163/","is_pending":"Not Pending","title":"Word Ladder","memory":"N/A","code":"class Solution:\n    def check(self, x1, x2):\n        cnt = 0\n        for i in range(len(x1)):\n            if cnt > 1:\n                return False\n            if x1[i] != x2[i]:\n                cnt += 1\n        if cnt == 1:\n            return True\n        return False\n    def ladderLength(self, beginWord: str, endWord: str, wordList: List[str]) -> int:\n        if endWord not in wordList:\n            return 0\n        next_word = {}\n        wordList.append(beginWord)\n        # n = len(wordList)\n        # for i in range(n):\n        #     next_word[wordList[i]] = []\n        #     for j in range(i + 1, n):\n        #         if i != j and self.check(wordList[i], wordList[j]):\n        #             next_word[wordList[i]].append(wordList[j])\n        q = []\n        q.append((beginWord, 1))\n        visited = set()\n        visited.add(beginWord)\n        while len(q) > 0:\n            word, cnt = q.pop(0)\n            for nxt in wordList:\n                if nxt not in visited and self.check(word, nxt):\n                    q.append((nxt, cnt + 1))\n                    visited.add(nxt)\n                    if nxt == endWord:\n                        return cnt + 1\n        return 0","compare_result":"11111111111111111111111111111111111100000000000000","title_slug":"word-ladder"}