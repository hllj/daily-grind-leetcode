{"id":736867125,"lang":"python3","time":"4 days, 21 hours","timestamp":1656790678,"status_display":"Accepted","runtime":"1571 ms","url":"/submissions/detail/736867125/","is_pending":"Not Pending","title":"My Calendar I","memory":"17.8 MB","code":"class Node:\n    def __init__(self, booked=False):\n        self.booked = booked\n        self.left = self.right = None\n\nclass MyCalendar:\n    lo = 0\n    hi = int(1e9)\n    def __init__(self):\n        self.root = None\n        \n    def search(self, root, start, end, lo, hi):\n        if not root or start > end or start > hi or end < lo:\n            return False\n        # lazy\n        if root.booked:    \n            return True\n        mid = (lo + hi) // 2\n        left_search = self.search(root.left, start, end, lo, mid)\n        right_search = self.search(root.right, start, end, mid + 1, hi)\n        return left_search or right_search\n\n    def insert(self, root, start, end, lo, hi):\n        if start > end or start > hi or end < lo:\n            return root\n        if root == None:\n            root = Node()\n        if (start <= lo and hi <= end):\n            root.booked = True\n            return root\n        mid = (lo + hi) // 2\n        root.left = self.insert(root.left, start, end, lo, mid)\n        root.right = self.insert(root.right, start, end, mid + 1, hi)\n        root.booked = root.left and root.left.booked and root.right and root.right.booked\n        return root\n        \n\n    def book(self, start: int, end: int) -> bool:\n        if not self.search(self.root, start, end - 1, self.lo, self.hi):\n            self.root = self.insert(self.root, start, end - 1, self.lo, self.hi)\n            return True\n        return False\n\n# Your MyCalendar object will be instantiated and called as such:\n# obj = MyCalendar()\n# param_1 = obj.book(start,end)","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"my-calendar-i"}