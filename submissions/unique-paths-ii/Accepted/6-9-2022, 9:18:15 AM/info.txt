{"id":717742935,"lang":"python3","time":"3 weeks, 6 days","timestamp":1654741095,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/717742935/","is_pending":"Not Pending","title":"Unique Paths II","memory":"13.9 MB","code":"class Solution:\n    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:\n        m = len(obstacleGrid)\n        n = len(obstacleGrid[0])\n        f = [[0 for _ in range(n)] for _ in range(m)]\n        v = 1\n        for i in range(m):\n            if obstacleGrid[i][0] == 1:\n                v = 0\n            f[i][0] = v\n        v = 1\n        for j in range(n):\n            if obstacleGrid[0][j] == 1:\n                v = 0\n            f[0][j] = v\n        for i in range(1, m):\n            for j in range(1, n):\n                if obstacleGrid[i][j] == 1:\n                    f[i][j] = 0\n                else:\n                    f[i][j] = f[i - 1][j] + f[i][j - 1]\n        return f[m - 1][n - 1]","compare_result":"11111111111111111111111111111111111111111","title_slug":"unique-paths-ii"}