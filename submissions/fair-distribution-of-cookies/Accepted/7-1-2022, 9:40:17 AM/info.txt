{"id":735522311,"lang":"python3","time":"6 days, 13 hours","timestamp":1656643217,"status_display":"Accepted","runtime":"3504 ms","url":"/submissions/detail/735522311/","is_pending":"Not Pending","title":"Fair Distribution of Cookies","memory":"13.9 MB","code":"class Solution:\n    def backtrack(self, i, n, x, cookies, dis, k):\n        if i == n:\n            # print(x, dis, max(dis))\n            self.res = min(self.res, max(dis))\n        else:\n            for t in range(k):\n                if dis[t] + cookies[i] < self.res:\n                    x[i] = t\n                    dis[t] += cookies[i]\n                    self.backtrack(i + 1, n, x, cookies, dis, k)\n                    x[i] = -1\n                    dis[t] -= cookies[i]\n    def distributeCookies(self, cookies: List[int], k: int) -> int:\n        n = len(cookies)\n        self.res = 8 * int(1e5 + 1)\n        x = [-1 for _ in range(n)]\n        dis = [0 for _ in range(k)]\n        self.backtrack(0, n, x, cookies, dis, k)\n        return self.res","compare_result":"1111111111111111111111111111111111111","title_slug":"fair-distribution-of-cookies"}