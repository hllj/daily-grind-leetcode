{"id":717175762,"lang":"python3","time":"4 weeks, 1 day","timestamp":1654676473,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/717175762/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"N/A","code":"class Solution:\n    def maxProfitAssignment(self, difficulty: List[int], profit: List[int], worker: List[int]) -> int:\n        job = []\n        n = len(difficulty)\n        for i in range(n):\n            job.append((difficulty[i], profit[i]))\n        job = sorted(job, key=lambda x: (x[0], x[1]))\n        # print(job)\n        res = 0\n        for x in worker:\n            l = 0\n            r = n - 1\n            idx = -1\n            while l <= r:\n                m = (l + r) // 2\n                if job[m][0] <= x:\n                    idx = m\n                    l = m + 1\n                else:\n                    r = m - 1\n            if idx != -1:\n                # print(x, job[idx])\n                res += job[idx][1]\n        return res","compare_result":"111111111011111110111111101111111011111110111111101111111","title_slug":"most-profit-assigning-work"}