{"id":717178068,"lang":"python3","time":"4Â weeks","timestamp":1654676763,"status_display":"Accepted","runtime":"670 ms","url":"/submissions/detail/717178068/","is_pending":"Not Pending","title":"Most Profit Assigning Work","memory":"17 MB","code":"class Solution:\n    def maxProfitAssignment(self, difficulty: List[int], profit: List[int], worker: List[int]) -> int:\n        job = []\n        n = len(difficulty)\n        for i in range(n):\n            job.append((difficulty[i], profit[i]))\n        job = sorted(job, key=lambda x: (x[0], x[1]))\n        max_profit = [0] * n\n        max_profit[0] = job[0][1]\n        for i in range(1, n):\n            max_profit[i] = max(max_profit[i - 1], job[i][1])\n        # print(job)\n        res = 0\n        for x in worker:\n            l = 0\n            r = n - 1\n            idx = -1\n            while l <= r:\n                m = (l + r) // 2\n                if job[m][0] <= x:\n                    idx = m\n                    l = m + 1\n                else:\n                    r = m - 1\n            if idx != -1:\n                # print(x, max_profit[idx])\n                res += max_profit[idx]\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"most-profit-assigning-work"}