{"id":316494679,"lang":"cpp","time":"2 years, 3 months","timestamp":1585333819,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/316494679/","is_pending":"Not Pending","title":"Maximal Rectangle","memory":"N/A","code":"class Solution {\npublic:\n    int maximalRectangle(vector<vector<char>>& matrix) {\n        int n = matrix.size();\n        if (n == 0) return 0;\n        int m = matrix[0].size();\n        vector < vector<int> > f (n + 1, vector <int> (m + 1, 0));\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++) {\n                f[i][j] = 0;\n                if (i - 1 >= 0) f[i][j] += f[i - 1][j];\n                if (j - 1 >= 0) f[i][j] += f[i][j - 1];\n                if (i - 1 >= 0 && j - 1 >= 0) f[i][j] -= f[i - 1][j - 1];\n                f[i][j] += (matrix[i - 1][j - 1] == '1' ? 1 : 0);\n            }\n        int res = 0;\n        for (int i = 1; i <= n; i++)\n            for (int j = 1; j <= m; j++) \n                for (int x = i; x <= n; x++)\n                    for (int y = j; y <= m; y++) {\n                        int sum = f[x][y] - f[x][j - 1] - f[i - 1][y] + f[i - 1][j - 1];\n                        if (sum == (x - i + 1) * (y - j + 1)) {\n                            res = max(res, sum);\n                        }\n                    }\n        return res;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111100","title_slug":"maximal-rectangle"}