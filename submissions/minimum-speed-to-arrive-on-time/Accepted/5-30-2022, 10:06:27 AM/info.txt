{"id":710172974,"lang":"python3","time":"1 month, 1 week","timestamp":1653879987,"status_display":"Accepted","runtime":"4251 ms","url":"/submissions/detail/710172974/","is_pending":"Not Pending","title":"Minimum Speed to Arrive on Time","memory":"28.6 MB","code":"import math\nclass Solution:\n    def minSpeedOnTime(self, dist: List[int], hour: float) -> int:\n        n = len(dist)\n        l = 1\n        r = int(1e7)\n        res = -1\n        while l <= r:\n            m = (l + r) // 2\n            s = 0\n            for i in range(n - 1):\n                s += math.ceil(dist[i] / m)\n            s += dist[-1] / m\n            if s <= hour:\n                res = m\n                r = m - 1\n            else:\n                l = m + 1\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-speed-to-arrive-on-time"}