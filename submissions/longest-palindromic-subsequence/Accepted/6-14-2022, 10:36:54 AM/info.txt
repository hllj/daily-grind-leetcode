{"id":721731195,"lang":"python3","time":"3Â weeks","timestamp":1655177814,"status_display":"Accepted","runtime":"2843 ms","url":"/submissions/detail/721731195/","is_pending":"Not Pending","title":"Longest Palindromic Subsequence","memory":"31.3 MB","code":"class Solution:\n    def longestPalindromeSubseq(self, s: str) -> int:\n        n = len(s)\n        f = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n        for i in range(n):\n            f[i][i] = 1\n            for j in range(i - 1, -1, -1):\n                if s[i] == s[j]:\n                    f[j][i] = f[j + 1][i - 1] + 2\n                else:\n                    f[j][i] = max(f[j + 1][i], f[j][i - 1])\n        return f[0][n - 1]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-palindromic-subsequence"}