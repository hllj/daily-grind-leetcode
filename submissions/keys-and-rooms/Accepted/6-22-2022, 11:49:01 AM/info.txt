{"id":728171547,"lang":"python3","time":"2Â weeks","timestamp":1655873341,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/728171547/","is_pending":"Not Pending","title":"Keys and Rooms","memory":"14.9 MB","code":"class Solution:\n    def dfs(self, u, avail, rooms):\n        avail[u] = False\n        for v in rooms[u]:\n            if avail[v] is True:\n                self.dfs(v, avail, rooms)\n    def canVisitAllRooms(self, rooms: List[List[int]]) -> bool:\n        n = len(rooms)\n        avail = [True for _ in range(n)]\n        self.dfs(0, avail, rooms)\n        for i in range(n):\n            if avail[i] is True:\n                return False\n        return True\n            ","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"keys-and-rooms"}