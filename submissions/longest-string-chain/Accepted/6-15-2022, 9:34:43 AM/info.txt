{"id":722517306,"lang":"python3","time":"2 weeks, 6 days","timestamp":1655260483,"status_display":"Accepted","runtime":"2864 ms","url":"/submissions/detail/722517306/","is_pending":"Not Pending","title":"Longest String Chain","memory":"14.4 MB","code":"class Solution:\n    def is_predecessor(self, word1, word2):\n        n1 = len(word1)\n        n2 = len(word2)\n        for i in range(n2):\n            can_word = word2[:i] + word2[i + 1:]\n            if can_word == word1:\n                return True\n        return False\n    def longestStrChain(self, words: List[str]) -> int:\n        words = sorted(words, key=lambda x: len(x))\n        n = len(words)\n        f = [0 for _ in range(n + 1)]\n        f[0] = 1\n        res = 1\n        for i in range(1, n):\n            f[i] = 1\n            for j in range(0, i):\n                if len(words[j]) == len(words[i]) - 1:\n                    if self.is_predecessor(words[j], words[i]) is True:\n                        f[i] = max(f[i], f[j] + 1)\n            res = max(res, f[i])\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-string-chain"}