{"id":729069555,"lang":"python3","time":"2Â weeks","timestamp":1655964405,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/729069555/","is_pending":"Not Pending","title":"Course Schedule III","memory":"N/A","code":"import heapq\n\nclass Solution:\n    def scheduleCourse(self, courses: List[List[int]]) -> int:\n        courses = sorted(courses, key=lambda x: x[1])\n        n = len(courses)\n        m = courses[-1][1]\n        f = [[0 for _ in range(m + 1)] for _ in range(n + 1)]\n        for j in range(m):\n            f[0][j] = 0\n        res = 0\n        for j in range(m + 1):\n            for i in range(1, n + 1):\n                f[i][j] = f[i - 1][j]\n                if j >= courses[i - 1][0] and j <= courses[i - 1][1]:\n                    f[i][j] = max(f[i][j], f[i - 1][j - courses[i - 1][0]] + 1)\n                res = max(res, f[i][j])\n        return res","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000","title_slug":"course-schedule-iii"}