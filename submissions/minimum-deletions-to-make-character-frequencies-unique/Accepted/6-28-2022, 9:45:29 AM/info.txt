{"id":733057541,"lang":"python3","time":"1 week, 2 days","timestamp":1656384329,"status_display":"Accepted","runtime":"322 ms","url":"/submissions/detail/733057541/","is_pending":"Not Pending","title":"Minimum Deletions to Make Character Frequencies Unique","memory":"14.8 MB","code":"class Solution:\n    def minDeletions(self, s: str) -> int:\n        d = {}\n        for c in range(26):\n            d[c] = 0\n        for x in s:\n            d[ord(x) - ord('a')] += 1\n        b = []\n        for c in range(26):\n            if d[c] != 0:\n                b.append(d[c])\n        b = sorted(b, reverse=True)\n        n = len(b)\n        idx = -1\n        s = set()\n        res = 0\n        for i in range(n):\n            while b[i] in s and b[i] > 0:\n                b[i] -= 1\n                res += 1\n            s.add(b[i])\n        return res\n            \n            \n        ","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-deletions-to-make-character-frequencies-unique"}