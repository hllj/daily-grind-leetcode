{"id":715651174,"lang":"python3","time":"4 weeks, 1 day","timestamp":1654513028,"status_display":"Accepted","runtime":"73 ms","url":"/submissions/detail/715651174/","is_pending":"Not Pending","title":"Pascal's Triangle","memory":"13.8 MB","code":"class Solution:\n    def generate(self, numRows: int) -> List[List[int]]:\n        res = [[1], [1, 1]]\n        if numRows == 1:\n            return [[1]]\n        if numRows == 2:\n            return [[1], [1, 1]]\n        for i in range(2, numRows):\n            row = [1]\n            n = len(res[-1])\n            last = res[-1]\n            for i in range(n - 1):\n                row.append(last[i] + last[i + 1])\n            row.append(1)\n            res.append(row)\n        return res","compare_result":"11111111111111","title_slug":"pascals-triangle"}