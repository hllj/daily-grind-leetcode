{"id":729202263,"lang":"python3","time":"1Â week, 5Â days","timestamp":1655977763,"status_display":"Accepted","runtime":"2726 ms","url":"/submissions/detail/729202263/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"53.9 MB","code":"class Solution:\n    def dfs(self, u, avail, adj):\n        avail[u] = False\n        for v in adj[u]:\n            if avail[v] is True:\n                self.dfs(v, avail, adj)\n    def findSmallestSetOfVertices(self, n: int, edges: List[List[int]]) -> List[int]:\n        adj = {}\n        for i in range(n):\n            adj[i] = []\n        for edge in edges:\n            u, v = edge\n            adj[u].append(v)\n        avail = [True for _ in range(n)]\n        for u in range(n):\n            if avail[u] is True:\n                for v in adj[u]:\n                    self.dfs(v, avail, adj)\n        res = []\n        for i in range(n):\n            if avail[i] is True:\n                res.append(i)\n        return res","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes"}