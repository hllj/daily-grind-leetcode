{"id":723300405,"lang":"python3","time":"2 weeks, 5 days","timestamp":1655345994,"status_display":"Accepted","runtime":"88 ms","url":"/submissions/detail/723300405/","is_pending":"Not Pending","title":"Flood Fill","memory":"14 MB","code":"class Solution:\n    paint = []\n    dx = [1, 0, -1, 0]\n    dy = [0, 1, 0, -1]\n    def dfs(self, image, x, y, n, m, paint, avail):\n        avail[x][y] = False\n        paint.append((x, y))\n        for k in range(4):\n            x1, y1 = x + self.dx[k], y + self.dy[k]\n            if (x1 < 0) or (x1 == n) or (y1 < 0) or (y1 == m):\n                continue\n            if image[x1][y1] == image[x][y] and avail[x1][y1] is True:\n                self.dfs(image, x1, y1, n, m, paint, avail)\n    def floodFill(self, image: List[List[int]], sr: int, sc: int, newColor: int) -> List[List[int]]:\n        paint = []\n        n = len(image)\n        m = len(image[0])\n        avail = [[True for _ in range(m)] for _ in range(n)]\n        self.dfs(image, sr, sc, n, m, paint, avail)\n        for (x, y) in paint:\n            image[x][y] = newColor\n        return image","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}