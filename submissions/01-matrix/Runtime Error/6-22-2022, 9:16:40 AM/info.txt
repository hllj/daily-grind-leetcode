{"id":728073836,"lang":"python3","time":"2Â weeks","timestamp":1655864200,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/728073836/","is_pending":"Not Pending","title":"01 Matrix","memory":"N/A","code":"class Solution:\n    dx = [-1, 0, 1, 0]\n    dy = [0, -1, 0, 1]\n    def updateMatrix(self, mat: List[List[int]]) -> List[List[int]]:\n        m = len(mat)\n        n = len(mat[0])\n        avail = [[True for _ in range(n)] for _ in range(n)]\n        f = [[0 for _ in range(n)] for _ in range(n)]\n        q = []\n        for i in range(m):\n            for j in range(n):\n                if mat[i][j] == 0:\n                    f[i][j] = 0\n                    q.append((i, j))\n                    avail[i][j] = False\n        # print(q)\n        while len(q) > 0:\n            q1 = []\n            while len(q) > 0:\n                (u, v) = q.pop(0)\n                for k in range(4):\n                    u1, v1 = u + self.dx[k], v + self.dy[k]\n                    if u1 < 0 or u1 == m or v1 < 0 or v1 == n:\n                        continue\n                    if avail[u1][v1] is True and mat[u1][v1] == 1:\n                        f[u1][v1] = f[u][v] + 1\n                        q1.append((u1, v1))\n                        avail[u1][v1] = False\n            q1, q = q, q1\n        return f","compare_result":"11000000000000000000000000000000000000000000000000","title_slug":"01-matrix"}