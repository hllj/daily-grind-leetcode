{"id":725120755,"lang":"python3","time":"2 weeks, 4 days","timestamp":1655555426,"status_display":"Accepted","runtime":"165 ms","url":"/submissions/detail/725120755/","is_pending":"Not Pending","title":"Implement Trie (Prefix Tree)","memory":"27.8 MB","code":"class Trie:\n\n    def __init__(self):\n        self.child = {}\n\n    def insert(self, word: str) -> None:\n        current = self.child\n        for c in word:\n            if c not in current:\n                current[c] = {}\n            current = current[c]\n        current['#'] = 1\n\n    def search(self, word: str) -> bool:\n        current = self.child\n        for c in word:\n            if c not in current:\n                return False\n            current = current[c]\n        return '#' in current\n\n    def startsWith(self, prefix: str) -> bool:\n        current = self.child \n        for c in prefix:\n            if c not in current:\n                return False\n            current = current[c]\n        return True\n\n\n# Your Trie object will be instantiated and called as such:\n# obj = Trie()\n# obj.insert(word)\n# param_2 = obj.search(word)\n# param_3 = obj.startsWith(prefix)","compare_result":"1111111111111111","title_slug":"implement-trie-prefix-tree"}