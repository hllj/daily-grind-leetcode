{"id":740145774,"lang":"python3","time":"1 hour, 2 minutes","timestamp":1657121046,"status_display":"Accepted","runtime":"4875 ms","url":"/submissions/detail/740145774/","is_pending":"Not Pending","title":"Minimum Path Cost in a Grid","memory":"19.2 MB","code":"class Solution:\n    def minPathCost(self, grid: List[List[int]], moveCost: List[List[int]]) -> int:\n        m = len(grid)\n        n = len(grid[0])\n        f = [[0 for _ in range(n)] for _ in range(m)]\n        for j in range(n):\n            f[0][j] = grid[0][j]\n        inf = float('inf')\n        for i in range(1, m):\n            for j in range(n):\n                f[i][j] = inf\n                for k in range(n):\n                    cost = moveCost[grid[i - 1][k]][j] + grid[i][j]\n                    f[i][j] = min(f[i][j], f[i - 1][k] + cost)\n        return min(f[m - 1][:])","compare_result":"1111111111111111111111111111111111","title_slug":"minimum-path-cost-in-a-grid"}