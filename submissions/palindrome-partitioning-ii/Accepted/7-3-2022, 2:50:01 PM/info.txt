{"id":737255145,"lang":"python3","time":"3 days, 8 hours","timestamp":1656834601,"status_display":"Accepted","runtime":"2292 ms","url":"/submissions/detail/737255145/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"44.1 MB","code":"class Solution:\n    def minCut(self, s: str) -> int:\n        n = len(s)\n        f = [0 for _ in range(n + 1)]\n        p = [[False for _ in range(n + 1)] for _ in range(n + 1)]\n        for i in range(1, n + 1):\n            p[i][i] = True\n        for i in range(1, n):\n            p[i + 1][i] = True\n        for i in range(2, n + 1):\n            for j in range(i - 1, 0, -1):\n                p[j][i] = (p[j + 1][i - 1]) and s[j - 1] == s[i - 1]\n        inf = 2001\n        for i in range(1, n + 1):\n            f[i] = inf\n            for j in range(i):\n                if p[j + 1][i]:\n                    f[i] = min(f[i], f[j] + 1)\n        return f[n] - 1","compare_result":"111111111111111111111111111111111111","title_slug":"palindrome-partitioning-ii"}