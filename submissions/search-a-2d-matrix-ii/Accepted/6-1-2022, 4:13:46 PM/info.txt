{"id":711924559,"lang":"python3","time":"1Â month","timestamp":1654074826,"status_display":"Accepted","runtime":"170 ms","url":"/submissions/detail/711924559/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"20.4 MB","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        n = len(matrix)\n        m = len(matrix[0])\n        if matrix[0][0] > target or matrix[n - 1][m - 1] < target:\n            return False\n        for i in range(n):\n            arr = matrix[i]\n            if arr[0] > target or arr[m - 1] < target:\n                continue\n            l = 0\n            r = m - 1\n            while l <= r:\n                mid = (l + r) // 2\n                if arr[mid] == target:\n                    return True\n                if arr[mid] > target:\n                    r = mid - 1\n                else:\n                    l = mid + 1\n        return False","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii"}