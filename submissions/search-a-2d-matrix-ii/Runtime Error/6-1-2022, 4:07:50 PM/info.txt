{"id":711921872,"lang":"python3","time":"1Â month","timestamp":1654074470,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/711921872/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution:\n    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:\n        n = len(matrix)\n        m = len(matrix[0])\n        l1 = 0\n        r1 = n - 1\n        while l1 <= r1:\n            mid = (l1 + r1) // 2\n            if matrix[mid][0] == target:\n                return True\n            if matrix[mid][0] > target:\n                r1 = mid - 1\n            else:\n                l1 = mid + 1\n        print(max(0, r1 - 1), min(n, l1 + 1))\n        for i in range(max(0, r1 - 1), min(n, l1 + 1)):\n            print('matrix', matrix[i])\n            l2 = 0\n            r2 = m - 1\n            while l2 <= r2:\n                mid = (l2 + r2) // 2\n                if matrix[mid][i] == target:\n                    print('found', mid, i)\n                    return True\n                if matrix[mid][i] > target:\n                    r2 = mid - 1\n                else:\n                    l2 = mid + 1\n        return False","compare_result":"111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix-ii"}