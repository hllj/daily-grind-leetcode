{"id":480176781,"lang":"cpp","time":"1 year, 2 months","timestamp":1618329037,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/480176781/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"N/A","code":"class Solution {\npublic:\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int m = matrix.size();\n        int n = matrix[0].size();\n        if (target < matrix[0][0] || target > matrix[m - 1][n - 1]) return false;\n        int left = 0, right = m - 1;\n        while (left < right) {\n            int mid = (left + right) >> 1;\n            if (matrix[mid][0] == target) return true;\n            else if (matrix[mid][0] < target) left = mid + 1;\n            else right = mid - 1;\n        }\n        if (left == right && matrix[left][0] == target) return true;\n        \n        int s1 = right - 1;\n        left = 0, right = n - 1;\n        while (left < right) {\n            int mid = (left + right) >> 1;\n            if (matrix[s1][mid] == target) return true;\n            else if (matrix[s1][mid] < target) left = mid + 1;\n            else right = mid - 1;\n        }\n        if (left == right && matrix[s1][left] == target) return true;\n        int s2 = right - 1;\n        left = 0, right = m - 1;\n        while (left < right) {\n            int mid = (left + right) >> 1;\n            if (matrix[mid][s2] == target) return true;\n            else if (matrix[mid][s2] < target) left = mid + 1;\n            else right = mid - 1;\n        }\n        if (left == right && matrix[left][s2] == target) return true;\n        return false;\n    }\n};","compare_result":"111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-a-2d-matrix-ii"}