{"id":703511214,"lang":"python3","time":"1 month, 2 weeks","timestamp":1653061968,"status_display":"Accepted","runtime":"367 ms","url":"/submissions/detail/703511214/","is_pending":"Not Pending","title":"Combination Sum","memory":"14.2 MB","code":"class Solution:\n    def combinationSum(self, candidates: List[int], target: int) -> List[List[int]]:\n        res = []\n        def backtrack(v, li):\n            if v == target:\n                print(v, li)\n                if sorted(li) not in res:\n                    res.append(sorted(li))\n            for x in candidates:\n                if (v + x <= target):\n                    li.append(x)\n                    v += x\n                    backtrack(v, li)\n                    v -= x\n                    li.pop()\n        v = 0\n        li = []\n        backtrack(v, li)\n        return res","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum"}