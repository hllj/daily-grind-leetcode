{"id":739865261,"lang":"python3","time":"8 hours, 42 minutes","timestamp":1657093430,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/739865261/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"N/A","code":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        n = len(s)\n        m = len(p)\n        f = [[False for _ in range(m + 1)] for _ in range(n + 1)]\n        f[0][0] = True\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                if s[i - 1] == p[j - 1] or p[j - 1] == '?':\n                    f[i][j] = f[i - 1][j - 1]\n                elif p[j - 1] == '*':\n                    if j - 1 == 0:\n                        f[i][j] = True\n                    else:\n                        for x in range(1, i):\n                            f[i][j] |= f[x][j - 1]\n                else:\n                    f[i][j] = False\n        return f[n][m]\n                    ","compare_resulttitle_slug":"wildcard-matching"}