{"id":739860901,"lang":"python3","time":"1 day, 9 hours","timestamp":1657093021,"status_display":"Accepted","runtime":"942 ms","url":"/submissions/detail/739860901/","is_pending":"Not Pending","title":"Wildcard Matching","memory":"22.9 MB","code":"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        n = len(s)\n        m = len(p)\n        f = [[False for _ in range(m + 1)] for _ in range(n + 1)]\n        f[0][0] = True\n        for j in range(1, m + 1):\n            if p[j - 1] == '*':\n                f[0][j] = f[0][j - 1]\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                if (s[i - 1] == p[j - 1] or p[j - 1] == '?'):\n                    f[i][j] = f[i - 1][j - 1]\n                elif p[j - 1] == '*':\n                    f[i][j] = f[i - 1][j] or f[i][j - 1]\n                else:\n                    f[i][j] = False\n        return f[n][m]","compare_resulttitle_slug":"wildcard-matching"}