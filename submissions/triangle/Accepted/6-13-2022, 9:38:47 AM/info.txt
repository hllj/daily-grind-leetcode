{"id":720888726,"lang":"python3","time":"3 weeks, 3 days","timestamp":1655087927,"status_display":"Accepted","runtime":"118 ms","url":"/submissions/detail/720888726/","is_pending":"Not Pending","title":"Triangle","memory":"14.8 MB","code":"class Solution:\n    def minimumTotal(self, triangle: List[List[int]]) -> int:\n        n = len(triangle)\n        for i in range(1, n):\n            for j in range(i + 1):\n                can = []\n                if 0 <= j <= i - 1:\n                    can.append(triangle[i - 1][j])\n                if 0 <= j - 1 <= i - 1:\n                    can.append(triangle[i - 1][j - 1])\n                triangle[i][j] += min(can)\n                    \n        return min(triangle[-1])","compare_result":"11111111111111111111111111111111111111111111","title_slug":"triangle"}