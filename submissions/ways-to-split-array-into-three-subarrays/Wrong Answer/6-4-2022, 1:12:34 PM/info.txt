{"id":713997817,"lang":"python3","time":"1Â month","timestamp":1654323154,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/713997817/","is_pending":"Not Pending","title":"Ways to Split Array Into Three Subarrays","memory":"N/A","code":"class Solution:\n    def waysToSplit(self, nums: List[int]) -> int:\n        n = len(nums)\n        for i in range(1, n):\n            nums[i] += nums[i - 1]\n        modulo = int(1e9 + 7)\n        res = 0\n        for i in range(n - 1):\n            s1 = nums[i]\n            l = i + 1\n            r = n - 1\n            idx1 = -1\n            while (l <= r):\n                m = (l + r) // 2\n                s2 = nums[m] - nums[i]\n                s3 = nums[n - 1] - nums[m]\n                if s1 <= s2 <= s3:\n                    idx1 = m\n                    r = m - 1\n                elif s1 > s2:\n                    l = m + 1\n                else:\n                    r = m - 1\n            l = i + 1\n            r = n - 1\n            idx2 = -1\n            while (l <= r):\n                m = (l + r) // 2\n                s2 = nums[m] - nums[i]\n                s3 = nums[n - 1] - nums[m]\n                if s1 <= s2 <= s3:\n                    idx2 = m\n                    l = m + 1\n                elif (s1 > s2):\n                    l = m + 1\n                else:\n                    r = m - 1\n            if (idx1 == -1) or (idx2 == -1):\n                continue\n            res += (idx2 - idx1 + 1)\n                \n        return res % modulo\n        ","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111010000000","title_slug":"ways-to-split-array-into-three-subarrays"}