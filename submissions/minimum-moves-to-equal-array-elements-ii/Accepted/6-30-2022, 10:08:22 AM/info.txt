{"id":734725553,"lang":"python3","time":"1Â week","timestamp":1656558502,"status_display":"Accepted","runtime":"106 ms","url":"/submissions/detail/734725553/","is_pending":"Not Pending","title":"Minimum Moves to Equal Array Elements II","memory":"15.5 MB","code":"import math\nclass Solution:\n    def minMoves2(self, nums: List[int]) -> int:\n        n = len(nums)\n        if n == 1:\n            return 0\n        if n == 2:\n            return abs(nums[1] - nums[0])\n        nums = sorted(nums)\n        # f = [0 for _ in range(n + 1)]\n        # f[0] = 0\n        # for i in range(1, n + 1):\n        #     f[i] = f[i - 1] + nums[i - 1]\n        # # print(f)\n        # res = float('inf')\n        # for n1 in range(1, n):\n        #     s1 = f[n1]\n        #     s2 = f[n] - f[n1]\n        #     if 2 * n1 != n:\n        #         x = min(max(math.floor((s1 - s2) / (2 * n1 - n)), nums[n1 - 1]), nums[n1])\n        #         cnt = abs(n1 * x - s1) + abs(s2 - (n - n1) * x)\n        #         # print(n1, x, cnt)\n        #         res = min(res, cnt)\n        # return res\n        median = nums[n // 2]\n        cnt = 0\n        for i in range(n):\n            cnt += abs(nums[i] - median)\n        return cnt","compare_result":"111111111111111111111111111111","title_slug":"minimum-moves-to-equal-array-elements-ii"}