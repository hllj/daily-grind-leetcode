{"id":730933980,"lang":"python3","time":"1 week, 4 days","timestamp":1656168282,"status_display":"Accepted","runtime":"2331 ms","url":"/submissions/detail/730933980/","is_pending":"Not Pending","title":"Count Unreachable Pairs of Nodes in an Undirected Graph","memory":"115.5 MB","code":"class Solution:\n    def dfs(self, u, visited, adj, group):\n        visited.add(u)\n        group.append(u)\n        for v in adj[u]:\n            if v not in visited:\n                self.dfs(v, visited, adj, group)\n        \n    def countPairs(self, n: int, edges: List[List[int]]) -> int:\n        adj = {}\n        for i in range(n):\n            adj[i] = []\n        for edge in edges:\n            u, v = edge\n            adj[u].append(v)\n            adj[v].append(u)\n        visited = set()\n        cnt = 0\n        for u in range(n):\n            if u not in visited:\n                group = []\n                self.dfs(u, visited, adj, group)\n                cnt += (n - len(group)) * len(group)\n                # print('u', group)\n        return cnt // 2","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-unreachable-pairs-of-nodes-in-an-undirected-graph"}