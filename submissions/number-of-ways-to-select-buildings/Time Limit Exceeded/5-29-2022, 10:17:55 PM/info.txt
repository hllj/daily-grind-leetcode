{"id":709850901,"lang":"python3","time":"1 month, 1 week","timestamp":1653837475,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/709850901/","is_pending":"Not Pending","title":"Number of Ways to Select Buildings","memory":"N/A","code":"class Solution:\n    def countsubseq(self, s, t, n, m):\n        for i in range(1, n + 1):\n            self.f[i][0] = 1\n        for j in range(1, m + 1):\n            self.f[0][j] = 0\n        self.f[0][0] = 1\n        for i in range(1, n + 1):\n            for j in range(1, m + 1):\n                if s[i - 1] == t[j - 1]:\n                    self.f[i][j] = self.f[i - 1][j - 1] + self.f[i - 1][j]\n                else:\n                    self.f[i][j] = self.f[i - 1][j]\n        return self.f[n][m]\n    def numberOfWays(self, s: str) -> int:\n        n = len(s)\n        m = 3\n        self.f = [[0] * (m + 1)] * (n + 1)\n        a = self.countsubseq(s, '010', n, m)\n        b = self.countsubseq(s, '101', n, m)\n        return a + b\n        \n        \n# s[i] == '0' -> office\n# s[i] == '1' -> restaurant\n\n# countsubseq '010' or '101'\n# f(i, j): number of subseq from 1->i in s and 1->j in t\n# f(0, j) = 0\n# f(i, 0) = 1\n# f(i, j) = f(i - 1, j) + f(i - 1, j - 1) if s[i] == s[j]\n#         = f(i - 1, j) if s[i] != s[j]","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"number-of-ways-to-select-buildings"}