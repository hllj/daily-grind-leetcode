{"id":717217131,"lang":"python3","time":"3 weeks, 6 days","timestamp":1654681735,"status_display":"Accepted","runtime":"9140 ms","url":"/submissions/detail/717217131/","is_pending":"Not Pending","title":"Minimum Falling Path Sum II","memory":"17.5 MB","code":"class Solution:\n    def minFallingPathSum(self, grid: List[List[int]]) -> int:\n        n = len(grid)\n        m = len(grid[0])\n        f = [0] * m\n        f1 = [0] * m\n        inf = float('inf')\n        for j in range(m):\n            f[j] = grid[0][j]\n        print(f)\n        for i in range(1, n):\n            for j in range(m):\n                f1[j] = inf\n                for k in range(m):\n                    if k != j:\n                        f1[j] = min(f1[j], grid[i][j] + f[k])\n                # if j - 1 >= 0:\n                #     f1[j] = min(f1[j], grid[i][j] + f[j - 1])\n                # if j + 1 < m:\n                #     f1[j] = min(f1[j], grid[i][j] + f[j + 1])\n            f,f1 = f1,f\n            print(f)\n        return min(f)","compare_result":"1111111111111111","title_slug":"minimum-falling-path-sum-ii"}