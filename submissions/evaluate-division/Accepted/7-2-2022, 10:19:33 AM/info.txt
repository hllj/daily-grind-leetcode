{"id":736280359,"lang":"python3","time":"3 days, 12 hours","timestamp":1656731973,"status_display":"Accepted","runtime":"33 ms","url":"/submissions/detail/736280359/","is_pending":"Not Pending","title":"Evaluate Division","memory":"14.1 MB","code":"class Solution:\n    def calcEquation(self, equations: List[List[str]], values: List[float], queries: List[List[str]]) -> List[float]:\n        adj = {}\n        weight = {}\n        for equation, v in zip(equations, values):\n            a, b = equation\n            if a not in adj:\n                adj[a] = [a, b]\n            else:\n                adj[a].append(a)\n                adj[a].append(b)\n            if b not in adj:\n                adj[b] = [a, b]\n            else:\n                adj[b].append(a)\n                adj[b].append(b)\n            weight[(a, a)] = 1.0\n            weight[(a, b)] = v\n            weight[(b, b)] = 1.0\n            weight[(b, a)] = 1.0 / v\n        inf = float('inf')\n        res = []\n        for query in queries:\n            s, t = query\n            if s not in adj.keys() or t not in adj.keys():\n                res.append(-1)\n                continue\n            f = {}\n            n = len(adj.keys())\n            for u in adj.keys():\n                f[u] = inf\n            f[s] = 1\n            visited = set()\n            for i in range(n):\n                u_best = None\n                d_best = inf\n                for u in adj.keys():\n                    if f[u] < d_best and u not in visited:\n                        u_best = u\n                        d_best = f[u]\n                # print('u best', u_best)\n                if u_best == t:\n                    break\n                u = u_best\n                visited.add(u)\n                for v in adj.keys():\n                    if (u, v) in weight:\n                        # print(u, v, weight[(u, v)], f[u], f[v])\n                        f[v] = min(f[v], f[u] * weight[(u, v)])\n                # print(f)\n            if f[t] == inf:\n                res.append(-1)\n            else:\n                res.append(f[t])\n        return res\n            \n            ","compare_result":"111111111111111111111111","title_slug":"evaluate-division"}