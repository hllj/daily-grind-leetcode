{"id":721717830,"lang":"python3","time":"3 weeks, 1 day","timestamp":1655176473,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/721717830/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution:\n    def longestPalindrome(self, s: str) -> str:\n        n = len(s)\n        f = [[0 for _ in range(n + 1)] for _ in range(n + 1)]\n        for i in range(n):\n            f[i][i] = 1\n            for j in range(i - 1, -1, -1):\n                if s[i] == s[j]:\n                    f[j][i] = f[j + 1][i - 1] + 2\n                else:\n                    f[j][i] = max(f[j + 1][i], f[j][i - 1])\n        max_len = f[0][n - 1]\n        for i in range(n):\n            for j in range(i, -1, -1):\n                if i - j + 1 == max_len and f[j][i] == max_len:\n                    return s[j:i+1]","compare_result":"111111111111111101100101111111111100011101101000000000000000000000000000000000000000000000001111111111111111111111000000000000000000000000000000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring"}