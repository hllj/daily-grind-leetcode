{"id":721727337,"lang":"cpp","time":"3Â weeks","timestamp":1655177429,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/721727337/","is_pending":"Not Pending","title":"Longest Palindromic Substring","memory":"N/A","code":"class Solution {\npublic:\n    string longestPalindrome(string s) {\n        int n = s.length();\n  s = \"#\" + s;\n  vector < vector<int> > f (n + 1);\n  for (int i = 0; i <= n; i++) \n    for (int j = 0; j <= n; j++)\n      f[i].push_back(0);\n  for (int i = 1; i <= n; i++)\n    for (int j = 1; j <= n; j++)\n      if (i == j) f[i][j] = 1;\n        else {\n          if (i > j) f[i][j] = 1;\n          else f[i][j] = 0;\n        }\n  \n  for (int i = 1; i <= n; i++) \n    for (int j = i - 1; j >= 1; j--)\n      if (s[j] == s[i]) f[j][i] = f[j + 1][i - 1];\n        else f[j][i] = 0;\n\n  int max_len = 0;\n  int max_i = -1;\n  int max_j = -1;\n  for (int i = 1; i <= n; i++)\n    for (int j = i; j <= n; j++)\n      if (f[i][j]) {\n        if (j - i + 1 > max_len) {\n          max_len = j - i + 1;\n          max_i = i;\n          max_j = j;\n        }\n      }\n  if (max_len == 0) return \"\";\n  else\n    return s.substr(max_i, max_j - max_i + 1);\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000000000000000000000000000000000000000","title_slug":"longest-palindromic-substring"}