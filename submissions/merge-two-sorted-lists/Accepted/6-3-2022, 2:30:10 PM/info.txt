{"id":713380646,"lang":"python3","time":"1Â month","timestamp":1654241410,"status_display":"Accepted","runtime":"55 ms","url":"/submissions/detail/713380646/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"13.9 MB","code":"# Definition for singly-linked list.\n# class ListNode:\n#     def __init__(self, val=0, next=None):\n#         self.val = val\n#         self.next = next\nclass Solution:\n    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:\n        head = None\n        p = None\n        while list1 != None or list2 != None:\n            if list1 != None and list2 != None:\n                min_value = min(list1.val, list2.val)\n                if min_value == list1.val:\n                    list1 = list1.next\n                else:\n                    list2 = list2.next\n            else:\n                if list1 == None:\n                    min_value = list2.val\n                    list2 = list2.next\n                else:\n                    min_value = list1.val\n                    list1 = list1.next\n            if head == None:\n                head = ListNode(min_value, None)\n                p = head\n            else:\n                p.next = ListNode(min_value, None)\n                p = p.next\n        return head","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}