{"id":711256745,"lang":"python3","time":"1 month, 1 week","timestamp":1654000969,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/711256745/","is_pending":"Not Pending","title":"Minimum Absolute Sum Difference","memory":"N/A","code":"class Solution:\n    def minAbsoluteSumDiff(self, nums1: List[int], nums2: List[int]) -> int:\n        a = nums1.copy()\n        a = sorted(a)\n        n = len(nums1)\n        sum_abs = 0\n        for i in range(n):\n            sum_abs += abs(nums1[i] - nums2[i])\n        res = sum_abs\n        for i in range(n):\n            can_abs = sum_abs - abs(nums1[i] - nums2[i])\n            l = 0\n            r = n - 1\n            idx = -1\n            while l <= r:\n                m = (l + r) // 2\n                if a[m] < nums2[i]:\n                    l = m + 1\n                elif a[m] > nums2[i]:\n                    r = m - 1\n                elif a[m] == nums2[i]:\n                    idx = m\n                    break\n                if idx != -1 and abs(a[m] - nums2[i]) < abs(a[idx] - nums2[i]):\n                    idx = m\n            if idx != -1:\n                res = min(res, can_abs + abs(a[idx] - nums2[i]))\n            else:\n                for j in range(r, l + 1):\n                    res = min(res, can_abs + abs(a[j] - nums2[i]))\n        return res","compare_result":"111110000000000000000000000000000000000000000000000","title_slug":"minimum-absolute-sum-difference"}