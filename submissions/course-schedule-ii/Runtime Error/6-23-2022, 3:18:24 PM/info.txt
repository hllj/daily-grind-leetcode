{"id":729155213,"lang":"python3","time":"2Â weeks","timestamp":1655972304,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/729155213/","is_pending":"Not Pending","title":"Course Schedule II","memory":"N/A","code":"class Solution:\n    def dfs(self, u, visited, sorted_nodes, adj):\n        if self.solution is False:\n            return\n        visited.add(u)\n        for v in adj[u]:\n            if v not in visited:\n                self.dfs(v, visited, sorted_nodes, adj)\n        for v in adj[u]:\n            if v not in sorted_nodes:\n                self.solution = False\n                break\n        sorted_nodes.appendleft(u)\n    def findOrder(self, numCourses: int, prerequisites: List[List[int]]) -> List[int]:\n        adj = {}\n        for i in range(numCourses):\n            adj[i] = []\n        for x in prerequisites:\n            a, b = x\n            adj[b].append(a)\n        self.solution = True\n        sorted_nodes = deque()\n        visited = set()\n        for i in range(numCourses):\n            if self.solution is False:\n                return False\n            if i not in visited:\n                self.dfs(i, visited, sorted_nodes, adj)\n        if self.solution:\n            return sorted_nodes\n        else:\n            return []","compare_result":"111110000000000000000000000000000000000000000","title_slug":"course-schedule-ii"}